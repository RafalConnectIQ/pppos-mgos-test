author: Apoorva Singh
description: A Mongoose OS app skeleton
version: 1.0

libs_version: ${mos.version}
modules_version: ${mos.version}
mongoose_os_version: ${mos.version}
manifest_version: 2017-09-29

# Optional. List of tags for online search.
tags:
  - c

# List of files / directories with C sources. No slashes at the end of dir names.
sources:
  - src

# List of dirs. Files from these dirs will be copied to the device filesystem
# filesystem:
#   - fs

# Custom configuration entries, settable via "device configuration"
# Below is a custom firmware configuration example.
# Uncomment and modify according to your needs:

config_schema:

  - ["wifi.ap.enable", false ]
  - ["wifi.ap.ssid", "s", "ConnectIQ_Box_??????", {title: "SSID"} ]
  - ["wifi.ap.pass", "s", "", {title: "Password", type: "null"} ]

  - ["wifi.sta.enable", false ]
  - ["wifi.sta.ssid", "TP-LINK_2.4GHz_B527BE" ]
  - ["wifi.sta.pass", "25401714" ]

  - ["pppos.fc_enable", false]
  - ["pppos.enable", "b", true, {title: "Enable PPPoS"}]
  - ["pppos.uart_no", "i", 2, {title: "Which UART to use"}]
  - ["pppos.baud_rate", "i", 115200, {title: "Baud rate to use for data transfer"}]
  - ["pppos.start_baud_rate", "i", 115200, {title: "Starting baud rate, used for initial configuration"}]
  - ["pppos.rx_gpio", "i", 27, {title: "RX pin; -1 = use default"}]
  - ["pppos.tx_gpio", "i", 26, {title: "TX pin; -1 = use default"}]
  - ["pppos.cts_gpio", "i", 0, {title: "CTS pin; -1 = use default"}]
  - ["pppos.rts_gpio", "i", 0, {title: "RTS pin; -1 = use default"}]

  # These depend on the operator and are usually well known.
  - ["pppos.apn", "s", "iot.1nce.net", {title: "APN name"}]
  - ["pppos.user", "s", " ", {title: "User name"}]
  - ["pppos.pass", "s", " ", {title: "Password"}]
  - ["pppos.connect_on_startup", "b", false, {title: "Connect immediately on startup"}]
  - ["pppos.rst_gpio", "i", -1, {title: "Reset pin; -1 = no reset"}]
  # - ["pppos.rst_gpio", "i", 14, {title: "Reset pin; -1 = no reset"}]
  - ["pppos.rst_act", "i", 0, {title: "Active level, 0 or 1"}]
  - ["pppos.rst_hold_ms", "i", 100, {title: "Time to hold reset pin in active state"}]
  - ["pppos.rst_wait_ms", "i", 5000, {title: "Time to wait after reset before initializing"}]
  - ["pppos.rst_mode", "i", 0, {title: "Reset mode: 0 - on first connect only, 1 - on every connect"}]
  # Misc settings.
  - ["pppos.echo_interval", "i", 10, {title: "LCP Echo interval, seconds"}]
  - ["pppos.echo_fails", "i", 3, {title: "Number of failed echos before connection is declared dead and retried"}]
  - ["pppos.hexdump_enable", "b", true, {title: "Dump all the data sent over UART to stderr"}]
  - ["pppos.reg_cmd", "s", "CREG", {title: "AT command used for setting and checking network registration. CREG(default-2G), CGREG, CEREG-LTE"}]
  - ["pppos.cfun_cycle", "b", false, {title: "Set CFUN to 0, then to 1"}]
  - ["debug.level", 3]


# These settings get compiled into the C structure, and can be accessed
# from the C code this way:
#
# printf("Hello from %s!\n", mgos_sys_config_get_device_id());
#
# Settings are cool: can be modified remotely without full firmware upgrade!
#
# To see all available compiled settings, buid the firmware and open
# build/gen/mgos_config.h file.
#
# Also, in this config_schema section, you can override existing
# settings that has been created by other libraries. For example, debug log
# level is 2 by default. For this firmware we can override it to 3:
#
# config_schema:
#  - ["debug.level", 3]

libs:
  - origin: https://github.com/mongoose-os-libs/pppos
  - origin: https://github.com/mongoose-os-libs/boards
  - origin: https://github.com/mongoose-os-libs/ca-bundle
  - origin: https://github.com/mongoose-os-libs/rpc-service-config
  - origin: https://github.com/mongoose-os-libs/rpc-uart

build_vars:

   ESP_IDF_SDKCONFIG_OPTS: >
    ${build_vars.ESP_IDF_SDKCONFIG_OPTS} 
    CONFIG_PPP_SUPPORT=y
    CONFIG_PPP_PAP_SUPPORT=y
    CONFIG_PPP_DEBUG_ON=y